## Header ####
## Creator:     German Agustin Fernandez Casals
## Main:        Hyperspectral data analysis
## Version:     2.1
## Creation:    2022-II-25
## Last edited: 2022-IV-06


## Index:                                       ####
#       1) Packages loading

#       2) Data import and transformation
#       2.1 Data loading
#       2.2 Data transformation

#       3) Data visualization
#       3.1 Raster visualization
#       3.1.1 Single layer raster
#       3.1.2 RGB raster
#       3.1.3 SIPI (Structure Intensive Pigment Index)
#       3.1.4 CARI (Chlorophyll Absorption in Reflectance Index)
#       3.1.5 PSSRa-c (Pigment- Specific Simple Ratio)
#       3.2 Wavelength plots
#       3.2.1 Plots from the same data base
#       3.2.2 Plots from different data bases (for comparative)
#       3.1.3 Image
#       3.2 Using S3 class data (data frame)
#       3.2.1 Basic graph


## 1) Packages loading ####
if(!require("hyperSpec")) install.packages("hyperSpec")
if(!require("raster")) install.packages("raster")
if(!require("tictoc")) install.packages("tictoc")


## 2) Data import and transformation ####

## 2.1 Data loading
G1D1 <- read.ENVI(
  file = "../Data/2022-01-18 CERC potatoes/20220118_135248_G1/20220118_135248_G1.dat",
  headerfile = "../Data/2022-01-18 CERC potatoes/20220118_135248_G1/20220118_135248_G1.hdr",
  header = list(),
  keys.hdr2data = FALSE,
  wavelength = NULL,
  label = list(),
  block.lines.skip = 0,
  block.lines.size = NULL,
  pull.header.lines = TRUE)

G1D2 <- read.ENVI(
  file = "../Data/2022-01-27 CERC potatoes/20220127_114743_G1/20220127_114743_G1.dat",
  headerfile = "../Data/2022-01-27 CERC potatoes/20220127_114743_G1/20220127_114743_G1.hdr",
  header = list(),
  keys.hdr2data = FALSE,
  wavelength = NULL,
  label = list(),
  block.lines.skip = 0,
  block.lines.size = NULL,
  pull.header.lines = TRUE)

## 2.2 Data transformation
G1D1df <- as.data.frame(G1D1, xy = TRUE)
G1D2df <- as.data.frame(G1D1, xy = TRUE)


## 3) Data visualization ####

## 3.1 Raster visualization

## 3.1.1 Single layer raster
ggplot() +
  geom_raster(data = G1D1df,
              aes (x = x, y = y, fill = spc[,32]))

## 3.1.2 RGB raster
rgb <- brick(
  rasterFromXYZ(data.frame(G1D1df$x, G1D1df$y, G1D1df$spc[,114])),
  rasterFromXYZ(data.frame(G1D1df$x, G1D1df$y, G1D1df$spc[,65])),
  rasterFromXYZ(data.frame(G1D1df$x, G1D1df$y, G1D1df$spc[,32])))

plotRGB(rgb,
        r = 1,
        g = 2,
        b = 3,
        stretch = "lin")

r <- polygon(x = c(500, 500, 450, 450),                       # X-Coordinates of polygon
        y = c(250, 300, 300, 250),                             # Y-Coordinates of polygon
        col = "transparent")  
r2 <- crop(rgb, r)

## 3.1.3 SIPI (Structure Intensive Pigment Index)
sipi <- brick(
  rasterFromXYZ(data.frame(G1D1df$x, G1D1df$y, G1D1df$spc[,199])),
  rasterFromXYZ(data.frame(G1D1df$x, G1D1df$y, G1D1df$spc[,22])),
  rasterFromXYZ(data.frame(G1D1df$x, G1D1df$y, G1D1df$spc[,139])))

pal <- colorRampPalette(c("black","green"))

plot((sipi[[1]] - sipi[[2]])/(sipi[[1]] + sipi[[3]]),
     axes = F,
     col = pal(50),
     main="Structure Intensive Pigment Index",
     sub="Georgina plant 1, day 1")

#or

ggplot() +
  geom_raster(data = G1D1df,
              aes (x = x, y = y,
                   fill = ((spc[,199] - spc[,22])/(spc[,199] + spc[,139])))) +
  scale_fill_gradientn(colours=c("black","green")) +
  labs(fill="SIPI Value",
       title = "Structure Intensive Pigment Index",
       subtitle = "Georgina plant 1, day 1",
       x = "", y = "") + 
  theme_minimal()

## 3.1.4 CARI (Chlorophyll Absorption in Reflectance Index)
cari <- brick(
  rasterFromXYZ(data.frame(G1D1df$x, G1D1df$y, G1D1df$spc[,149])),
  rasterFromXYZ(data.frame(G1D1df$x, G1D1df$y, G1D1df$spc[,134])),
  rasterFromXYZ(data.frame(G1D1df$x, G1D1df$y, G1D1df$spc[,74])))

pal <- colorRampPalette(c("black","green"))

plot((cari[[1]] - cari[[2]]) - 0.2*(cari[[1]] - cari[[3]]),
     col = pal(50))

#or

ggplot() +
  geom_raster(data = G1D1df,
              aes (x = x, y = y,
                   fill = ((spc[,149] - spc[,134]) - 
                             0.2*(spc[,149] - spc[,74])))) +
  scale_fill_gradientn(colours=c("black","green")) +
  labs(fill="CARI Value",
       title = "Chlorophyll Absorption in Reflectance Index",
       subtitle = "Georgina plant 1, day 1",
       x = "", y = "") + 
  theme_minimal()

## 3.1.5 PSSRa-c (Pigment- Specific Simple Ratio)
PSSRac <- brick(
  rasterFromXYZ(data.frame(G1D1df$x, G1D1df$y, G1D1df$spc[,199]/G1D1df$spc[,139])),
  rasterFromXYZ(data.frame(G1D1df$x, G1D1df$y, G1D1df$spc[,199]/G1D1df$spc[,117])),
  rasterFromXYZ(data.frame(G1D1df$x, G1D1df$y, G1D1df$spc[,199]/G1D1df$spc[,34])))


plotRGB(PSSRac,
        r = 1,
        g = 2,
        b = 3,
        stretch = "lin")

## 3.2 Wavelength plots

## 3.2.1 Plots from the same data base

#All wavelength plot
qplotspc(G1D1) #qplotspc is because is a class S4 database

#Plot of all wavelength and a zone
qplotspc(G1D1, c(550 ~ 750, min ~ 1200))

#Mean and quantile plot, I couldn't put title to the plot or axis
plot(G1D1, col = "red", y = "spcprctile") 
abline (v = c(402, 750), col = c("black", "darkgreen")) #Test: visible spectrum

#Standard deviation 
plot(G1D1, func = sd) 

#SD and mean with ggplot2
qplotspc(mean(G1D1)) +  
  geom_ribbon (aes (ymin = mean + sd,
                    ymax = mean - sd,
                    y = 0, group = NA),
               alpha = 0.25,
               data = as.t.df (mean_sd (G1D1)))

#RGB wavelength
plot(G1D1[c(630, 532, 465)], col = c("red", "green", "blue"))

#Plot of a particular wavelength range
plot(G1D1[,, 700 ~ 1200], col = matlab.dark.palette (6))

#Histogram
ggplot(G1D1df, aes(x = spc[,"630"])) +
  geom_histogram()

#qqplot (without the qqline)
qqplot(G1D1df$spc[,"630"], G1D1df$spc[,"532"]) # take some minutes / don't work with qqnorm

#boxplot
boxplot(G1D1df$spc[,"630"], col = "red")


## 3.2.2 Plots from different data bases (for comparation) 
plot (G1D1[630], col = "black")
plot (G1D2[630], col = "red", add = TRUE) 

plot(G1D1, col = "black", y = "spcprctile")
plot(G1D2, col = "yellow", y = "spcprctile", add = TRUE)
abline (v = c(402, 750), col = c("black", "darkgreen"))